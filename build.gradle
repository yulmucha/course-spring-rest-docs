plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'yullivan'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

// asciidoctorExt라는 이름의 구성 선언
configurations {
    asciidoctorExt
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    /*
    * asciidoctorExt 구성에서 spring-restdocs-asciidoctor에 대한 종속성을 추가; asciidoctor 태스크에서만 사용할 의존성
    * 다음과 같이 자동 구성됨: .adoc 파일에서 {snippets} -> build/generated-snippets
    * 또한 operation block macro 사용 가능
    * */
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

// asciidoctor 태스크는 id 'org.asciidoctor.jvm.convert' 플러그인을 적용함으로써 자동으로 생성됨
// AsciiDoc 문서 -> HTML 변환 담당
tasks.named('asciidoctor') {
    configurations 'asciidoctorExt' // asciidoctor 태스크에서 사용할 별도의 의존성 구성(dependency configuration)을 지정
//	baseDirFollowsSourceFile() // 기본값이라 없어도 됨
    inputs.dir snippetsDir
    dependsOn test
}

tasks.register('copyDocument', Copy) {
    dependsOn tasks.asciidoctor
    from tasks.asciidoctor.outputDir
    into layout.buildDirectory.dir("resources/main/static/docs")
}

// resolveMainClassName 태스크에 명시적 의존성 추가
tasks.named('resolveMainClassName') {
    dependsOn tasks.copyDocument
}

// 모든 Jar 관련 태스크에 대한 의존성 설정
tasks.withType(Jar).configureEach {
    dependsOn tasks.copyDocument
}

// 모든 JavaExec 태스크에 의존성 추가 (IntelliJ 실행 태스크 포함)
tasks.withType(JavaExec).configureEach {
    dependsOn tasks.copyDocument
}

// processResources 태스크가 완료된 후 copyDocument가 실행되도록 설정
tasks.named('processResources') {
    finalizedBy tasks.copyDocument
}